package com.edgedo.sys.entity;

import java.io.Serializable;
import com.baomidou.mybatisplus.annotations.TableName;
import com.baomidou.mybatisplus.annotations.TableField;

@TableName("meeting_room_arrange")
public class MeetingRoomArrange implements Serializable{
	
		
	/**
	 * 属性描述:id
	 */
	@TableField(value="id",exist=true)
	java.lang.Integer id;
	
	/**
	 * 属性描述:会议开始时间
	 */
	@TableField(value="use_date",exist=true)
	java.util.Date useDate;
	
	/**
	 * 属性描述:会议结束时间
	 */
	@TableField(value="end_date",exist=true)
	java.util.Date endDate;
	
	/**
	 * 属性描述:会议场所id
	 */
	@TableField(value="meeting_room_id",exist=true)
	java.lang.Integer meetingRoomId;
	
	/**
	 * 属性描述:安保负责人。对应attendance_id
	 */
	@TableField(value="guard_attendance_id",exist=true)
	java.lang.Integer guardAttendanceId;
	
	/**
	 * 属性描述:接待负责人。对应attendance_id
	 */
	@TableField(value="charger_attendance_id",exist=true)
	java.lang.Integer chargerAttendanceId;
	
	/**
	 * 属性描述:会议议程的文档地址（传一个word文档）
	 */
	@TableField(value="agenda_doc",exist=true)
	java.lang.String agendaDoc;
	
	/**
	 * 属性描述:参会人员概要。逗号分隔的文本。备注型内容，与其它数据无关联，编辑会议时手输
	 */
	@TableField(value="participant_brief",exist=true)
	java.lang.String participantBrief;
	
	/**
	 * 属性描述:参会单位。逗号分隔的文本。备注型内容，与其它数据无关联，编辑会议时手输
	 */
	@TableField(value="participant_units",exist=true)
	java.lang.String participantUnits;
	
	/**
	 * 属性描述:参会人员，逗号分隔的attendance_id
	 */
	@TableField(value="attendees",exist=true)
	java.lang.String attendees;
	
	/**
	 * 属性描述:图片：会议人员座位安排图（编辑会议时上传）。后期这个字段（或者换用一个新的字段）用来保存当前会议的实际座位分布数据
	 */
	@TableField(value="meeting_placement",exist=true)
	java.lang.String meetingPlacement;
	
	/**
	 * 属性描述:来访id
	 */
	@TableField(value="reception_id",exist=true)
	java.lang.Integer receptionId;
	
	/**
	 * 属性描述:活动id
	 */
	@TableField(value="event_id",exist=true)
	java.lang.Integer eventId;

	/**
	 * 属性描述:0=正常 1=删除
	 */
	@TableField(value="deleted",exist=true)
	java.lang.Boolean deleted;


	public Boolean getDeleted() {
		return deleted;
	}

	public void setDeleted(Boolean deleted) {
		this.deleted = deleted;
	}

	public java.lang.Integer getId(){
		return this.id;
	}
	
	public void setId(java.lang.Integer id){
		this.id=id;
	}
	
	
	public java.util.Date getUseDate(){
		return this.useDate;
	}
	
	public void setUseDate(java.util.Date useDate){
		this.useDate=useDate;
	}
	
	
	public java.util.Date getEndDate(){
		return this.endDate;
	}
	
	public void setEndDate(java.util.Date endDate){
		this.endDate=endDate;
	}
	
	
	public java.lang.Integer getMeetingRoomId(){
		return this.meetingRoomId;
	}
	
	public void setMeetingRoomId(java.lang.Integer meetingRoomId){
		this.meetingRoomId=meetingRoomId;
	}
	
	
	public java.lang.Integer getGuardAttendanceId(){
		return this.guardAttendanceId;
	}
	
	public void setGuardAttendanceId(java.lang.Integer guardAttendanceId){
		this.guardAttendanceId=guardAttendanceId;
	}
	
	
	public java.lang.Integer getChargerAttendanceId(){
		return this.chargerAttendanceId;
	}
	
	public void setChargerAttendanceId(java.lang.Integer chargerAttendanceId){
		this.chargerAttendanceId=chargerAttendanceId;
	}
	
	
	public java.lang.String getAgendaDoc(){
		return this.agendaDoc;
	}
	
	public void setAgendaDoc(java.lang.String agendaDoc){
		this.agendaDoc=agendaDoc;
	}
	
	
	public java.lang.String getParticipantBrief(){
		return this.participantBrief;
	}
	
	public void setParticipantBrief(java.lang.String participantBrief){
		this.participantBrief=participantBrief;
	}
	
	
	public java.lang.String getParticipantUnits(){
		return this.participantUnits;
	}
	
	public void setParticipantUnits(java.lang.String participantUnits){
		this.participantUnits=participantUnits;
	}
	
	
	public java.lang.String getAttendees(){
		return this.attendees;
	}
	
	public void setAttendees(java.lang.String attendees){
		this.attendees=attendees;
	}
	
	
	public java.lang.String getMeetingPlacement(){
		return this.meetingPlacement;
	}
	
	public void setMeetingPlacement(java.lang.String meetingPlacement){
		this.meetingPlacement=meetingPlacement;
	}
	
	
	public java.lang.Integer getReceptionId(){
		return this.receptionId;
	}
	
	public void setReceptionId(java.lang.Integer receptionId){
		this.receptionId=receptionId;
	}
	
	
	public java.lang.Integer getEventId(){
		return this.eventId;
	}
	
	public void setEventId(java.lang.Integer eventId){
		this.eventId=eventId;
	}
	
	
	
	
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
			sb.append(", id=").append(id);			
			sb.append(", useDate=").append(useDate);			
			sb.append(", endDate=").append(endDate);			
			sb.append(", meetingRoomId=").append(meetingRoomId);			
			sb.append(", guardAttendanceId=").append(guardAttendanceId);			
			sb.append(", chargerAttendanceId=").append(chargerAttendanceId);			
			sb.append(", agendaDoc=").append(agendaDoc);			
			sb.append(", participantBrief=").append(participantBrief);			
			sb.append(", participantUnits=").append(participantUnits);			
			sb.append(", attendees=").append(attendees);			
			sb.append(", meetingPlacement=").append(meetingPlacement);			
			sb.append(", receptionId=").append(receptionId);			
			sb.append(", eventId=").append(eventId);			
        sb.append("]");
        return sb.toString();
    }

   
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        MeetingRoomArrange other = (MeetingRoomArrange) that;
        boolean flag = true;
        return  flag
        		&&(this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))		
				        		&&(this.getUseDate() == null ? other.getId() == null : this.getUseDate().equals(other.getUseDate()))		
				        		&&(this.getEndDate() == null ? other.getId() == null : this.getEndDate().equals(other.getEndDate()))		
				        		&&(this.getMeetingRoomId() == null ? other.getId() == null : this.getMeetingRoomId().equals(other.getMeetingRoomId()))		
				        		&&(this.getGuardAttendanceId() == null ? other.getId() == null : this.getGuardAttendanceId().equals(other.getGuardAttendanceId()))		
				        		&&(this.getChargerAttendanceId() == null ? other.getId() == null : this.getChargerAttendanceId().equals(other.getChargerAttendanceId()))		
				        		&&(this.getAgendaDoc() == null ? other.getId() == null : this.getAgendaDoc().equals(other.getAgendaDoc()))		
				        		&&(this.getParticipantBrief() == null ? other.getId() == null : this.getParticipantBrief().equals(other.getParticipantBrief()))		
				        		&&(this.getParticipantUnits() == null ? other.getId() == null : this.getParticipantUnits().equals(other.getParticipantUnits()))		
				        		&&(this.getAttendees() == null ? other.getId() == null : this.getAttendees().equals(other.getAttendees()))		
				        		&&(this.getMeetingPlacement() == null ? other.getId() == null : this.getMeetingPlacement().equals(other.getMeetingPlacement()))		
				        		&&(this.getReceptionId() == null ? other.getId() == null : this.getReceptionId().equals(other.getReceptionId()))		
				        		&&(this.getEventId() == null ? other.getId() == null : this.getEventId().equals(other.getEventId()))		
				;
    }

  
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());		
		        result = prime * result + ((getUseDate() == null) ? 0 : getUseDate().hashCode());		
		        result = prime * result + ((getEndDate() == null) ? 0 : getEndDate().hashCode());		
		        result = prime * result + ((getMeetingRoomId() == null) ? 0 : getMeetingRoomId().hashCode());		
		        result = prime * result + ((getGuardAttendanceId() == null) ? 0 : getGuardAttendanceId().hashCode());		
		        result = prime * result + ((getChargerAttendanceId() == null) ? 0 : getChargerAttendanceId().hashCode());		
		        result = prime * result + ((getAgendaDoc() == null) ? 0 : getAgendaDoc().hashCode());		
		        result = prime * result + ((getParticipantBrief() == null) ? 0 : getParticipantBrief().hashCode());		
		        result = prime * result + ((getParticipantUnits() == null) ? 0 : getParticipantUnits().hashCode());		
		        result = prime * result + ((getAttendees() == null) ? 0 : getAttendees().hashCode());		
		        result = prime * result + ((getMeetingPlacement() == null) ? 0 : getMeetingPlacement().hashCode());		
		        result = prime * result + ((getReceptionId() == null) ? 0 : getReceptionId().hashCode());		
		        result = prime * result + ((getEventId() == null) ? 0 : getEventId().hashCode());		
		;
        return result;
    }

}
